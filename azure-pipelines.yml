# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

pr:
- master

trigger:
  branches:
    include:
    - releases/*
    exclude:
    - master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '*.sln'
  builPdlatform: 'Any CPU'
  buildConfiguration: 'Release'
  DOCKER_DRIVER: overlay
  CONTAINER_IMAGE: codeclimate/codeclimate
  CONTAINER_TAG: '0.85.2'
  RESHARPER_CLI_NAME: 'JetBrains.ReSharper.CommandLineTools.Unix'
  RESHARPER_CLI_VERSION: "2019.2.3"
  # set RESHARPER_CLI_VERSION=2019.2.3

jobs:
- job: test
  steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        arguments: '--collect:"XPlat Code Coverage"'

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(Agent.TempDirectory)\**\coverage.cobertura.xml'


# doesn't work
- job: SonarCloudQualityGate
  enabled: false
  steps:
    - task: NuGetToolInstaller@1
      enabled: false
    - task: NuGetCommand@2
      enabled: false
      inputs:
        restoreSolution: '$(solution)'
    - task: eshopworld.SonarCloudQualityGate.SonarCloudQualityGate.SonarCloudQualityGate@1
      displayName: SonarCloudQualityGate
      continueOnError: true
      enabled: false

- job: ResharperCli
  steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
    - task: alanwales.resharper-code-analysis.custom-build-task.ResharperCli@2
      displayName: 'Automated code quality checks'
      inputs:
        solutionOrProjectPath: 'MyProject.sln'
        additionalArguments: '/disable-settings-layers:SolutionPersonal --output=inspectcodeReport.html --format=Html'
      continueOnError: true
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Agent.TempDirectory)\JetBrains.ReSharper.CommandLineTools.2019.3.0\tools\Reports\CodeInspection_Unlabeled_Build.xml'
        ArtifactName: 'inspectcodeReport'
        publishLocation: 'Container'
      continueOnError: true

- job: ResharperCliInspectCode
  steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
    - task: CmdLine@2
      continueOnError: true
      inputs:
        script: |
          curl -LO "https://download.jetbrains.com/resharper/ReSharperUltimate.RESHARPER_CLI_VERSION/$RESHARPER_CLI_NAME.$RESHARPER_CLI_VERSION.zip"

          # curl -LO "https://download.jetbrains.com/resharper/ReSharperUltimate.%RESHARPER_CLI_VERSION%/%RESHARPER_CLI_NAME%.%RESHARPER_CLI_VERSION%.zip"

          powershell Expand-Archive -Path %RESHARPER_CLI_NAME%.%RESHARPER_CLI_VERSION%.zip -DestinationPath resharper

          resharper/inspectcode.exe "MyProject.sln" --output=inspectcodeReport.html --format=Html
    - task: PublishBuildArtifacts@1
      continueOnError: true
      inputs:
        PathtoPublish: '$(Agent.TempDirectory)\inspectcodeReport.html'
        ArtifactName: 'inspectcodeReport'
        publishLocation: 'Container'

- job: BuildQualityChecks
  steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
    - task: mspremier.BuildQualityChecks.QualityChecks-task.BuildQualityChecks@6
      displayName: 'Check build quality'
      continueOnError: true

- job: codeclimate
  variables:
      DOCKER_DRIVER: overlay
      CONTAINER_IMAGE: codeclimate/codeclimate
      CONTAINER_TAG: '0.85.2'
  steps:  
    - task: DockerInstaller@0
      displayName: 'Install Docker 17.09.0-ce'
      continueOnError: false
    - task: CmdLine@2
      inputs:
        script: |
          docker pull $CONTAINER_IMAGE
          mkdir -p CodeQuality
          docker run  --env CODECLIMATE_DEBUG=1 --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc $CONTAINER_IMAGE:$CONTAINER_TAG analyze -f html > CodeQuality/codeclimateReport.html